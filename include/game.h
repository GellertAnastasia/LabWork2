/**
 * @class Game
 * @brief Основной класс управления игровым процессом
 * 
 * Координирует взаимодействие всех компонентов игры:
 * - Инициализацию игроков и бота
 * - Управление очередью ходов
 * - Проверку условий победы
 * - Запуск финального экрана
 */
#ifndef GAME_H
#define GAME_H

#include "playerTurn.h"
#include "botTurn.h"
#include "zone.h"
#include "endUI.h"

class Game
{
public:
    Field field;            ///< Игровое поле
    Zone zone1;             ///< Зона контроля игрока 1 (нижняя часть)
    Zone zone2;             ///< Зона контроля игрока 2 (верхняя часть)
    Player player1;         ///< Основной игрок (человек)
    Player player2;         ///< Второй игрок (человек или бот)
    PlayerTurn playerTurn;  ///< Контроллер хода игрока-человека
    BotTurn botTurn;        ///< Контроллер хода ИИ

    /**
     * @brief Конструктор инициализирует игровые объекты
     * @details Выполняет:
     * 1. Настройку зон игроков
     * 2. Размещение баз на поле
     * 3. Начальную выдачу карт
     */
    Game();

    /**
     * @brief Запуск игры против другого игрока (PvP)
     * @algorithm
     * - Поочередные ходы игроков
     * - Проверка состояния баз после каждого хода
     * - Завершение при разрушении базы
     */
    void startA();

    /**
     * @brief Запуск игры против ИИ (PvE)
     * @algorithm
     * - Чередование ходов игрока и бота
     * - Автоматическое принятие решений ИИ
     * - Обработка условий победы
     */
    void startB();
};

#endif
